rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow access to user's subcollections (notifications, etc.)
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Practitioners can read/write patients they created
    match /patients/{patientId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.practitionerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.practitionerId;
    }
    
    // Practitioners can read/write their own appointments
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.practitionerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.practitionerId;
    }
    
    // Practitioners can read/write their own sessions
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.practitionerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.practitionerId;
    }
    
    // Practitioners can read/write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Allow admin access for practitioner applications
    match /practitioner_applications/{applicationId} {
      allow read, write: if request.auth != null;
    }
  }
}